# Redirect all traffic to HTTPS
server {
  listen 80;
  listen [::]:80;
  server_name ${SWARMHOST};
  return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name ${SWARMHOST};
    access_log  /var/log/nginx/host.access.log  main;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    # CORS
    add_header Access-Control-Allow-Origin "${SWARMHOST}";
    add_header Access-Control-Allow-Origin "localhost";
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD";
    add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";

    proxy_pass_request_headers      on;

    ssl_certificate /etc/nginx/ssl/cert.crt;
    ssl_certificate_key /etc/nginx/ssl/private-key.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # Add HSTS
    # NOTE: Don't add the header if using a self-signed cert
    #add_header Strict-Transport-Security "max-age=31536000" always;

    # SSL Sessions
    ssl_session_cache shared:SSL:40m;
    ssl_session_timeout 4h;
    ssl_session_tickets on;

    # Defines host root
    root /usr/share/nginx/html;
    index index.html;

    location / {
      try_files $uri /index.html =404;
    }

    location ~* \.(css|js|jpg|png)$ {
        access_log off;
        add_header Cache-Control public;
        add_header Pragma public;
        add_header Vary Accept-Encoding;
        expires 1M;
    }

    # redirect server error pages to the static pages
    error_page  404              /404.html;
    location = /40x.html {
        root   /usr/share/nginx/html;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

