plugins {
    id 'application'
    id 'org.springframework.boot' version '2.6.7'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    // id 'idea' // optional (to generate IntelliJ IDEA project files)
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.1'
    }
}

dependencies {

    // Jackson deps for Spring JSON
    //implementation 'com.fasterxml.jackson:jackson-bom:2.13.3!!'
    
    // Test deps
    //testImplementation(platform('org.junit:junit-bom:5.8.2'))

    // Spring Boot Dependencies
    implementation("org.springframework.cloud:spring-cloud-config-server")
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    // https://projectlombok.org/download
    compileOnly('org.projectlombok:lombok:1.18.24')
    annotationProcessor('org.projectlombok:lombok:1.18.24')
	
    testCompileOnly('org.projectlombok:lombok:1.18.24')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.24')
}

configurations.all {
    //resolutionStrategy {
    //    failOnVersionConflict()
    //}
    resolutionStrategy {
        failOnDynamicVersions()
    }
}

application {
    mainClass = 'io.hotely.config.ConfigApplication'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        //vendor = JvmVendorSpec.ORACLE
    }
    consistentResolution {
        useCompileClasspathVersions()
    }
}

task printSourceSetInformation(){
    doLast{
        sourceSets.each { srcSet ->
            println "["+srcSet.name+"]"
            print "-->Source directories: "+srcSet.allJava.srcDirs+"\n"
            print "-->Output directories: "+srcSet.output.classesDirs.files+"\n"
            println ""
        }
    }
}

wrapper.gradleVersion = '7.4.2'
